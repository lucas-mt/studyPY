--terminal--
para abrir o terminal:
ctrl+alt+t

para limpar o terminal:
~$ clear
ou,
ctrl+l

aperte duas vezes 'tab' para ver as sugestões de diretórios e arquivos.

para ver como está a cpu está trabalhando e as aplicações:
~$ htop
ou
~$ top
ou, se desejar encontrar uma aplicação específica:
~$ ps aux | grep <app>
para ver apenas a ID da aplicação:
~$pgrep <app>

uma forma de fechar qualquer app, se este travar, por exemplo:
~$ xkill
em seguida, aperta na tab que quer fechar.
ou,
~$ kill -9 <ID_app>

para saber o nome do usuário:
~$ whoami
para saber o nome da máquina:
~$ hostname

para ver informações do uso de memória:
~$ free -h
ou,
~$ free -m
ou, se quiser mais detalhes:
~$ df -h

para ver como a memória está sendo usada:
~$ ncdu
é necessário baixar se ainda não tiver:
~$ sudo apt install ncdu
é possível deletar uma aplicação, diretório ou arquivo apertando a tecla D e, em seguida, confirmando com o popup que aparece na tela. para isto é necessário que o que vai ser deletado esteja selecionado.
ainda é possível ver especificamente como a memória está sendo usada por uma aplicação, diretório ou arquivo:
~$ ndc <app_dir_arq> 

informações sobre o kernel podem ser obtidas com:
~$ uname
ou, para informações mais completas:
~$ uname -r

para ver o hitórico de todos os comandos usados no terminal:
~$ history
use !! para completar a linha de comando com o comando anterior.
use !<número_linha> observado no comando "history" para que este comando seja copiado.

para criar apelidos e falicitar comandos:
~$ alias <apelido>='<comando>'
a partir daí, usa o apelido quando quiser utilizar este comando. Porém, só serve enquanto o terminal estiver aberto. Quando fechar, o sistema irá esquecer deste apelido.
para tornar o alias fixo é necessário, em ~/, encontrar o arquivo .bashrc, que é nativo do sistema, e, nele, adicionar os alias que desejar; ou, encontrar o arquivo .bash_aliases, que é criado pelo usuário, e, nele, adicionar os alias que desejar. 
para ver todos os apelidos registrados, temporários ou não:
~$ alias


--buscando por caracteres no terminal--
use * quando quiser indicar em que canto da palavra tal caractere está; use ? quano não souber qual caractere ocupa aquela posição.
outra forma é pela criação de listas de caracteres, por exemplo:
~$ ls f[a-i]*
ou, não precisa do tracinho, então, o resultado é o mesmo para:
~$ ls f[ai]*
ou seja, encontra todos os arquivos que termina com f seguido de qualquer letra que esteja entre entre a e i na ordem alfabética.
pode-se evoluir este comando:
~$ ls f[a-c,i]*
~$ ls *[b-g,z]*
assim, sucessivamente.
há diferença entre colchetes e chaves:
~$ ls *{am,ul}*
neste caso, não pode criar combinações, mas procura-se apenas os padrões mostrados entre chaves.
com um ponto no início será procurado arquivos com aquela extensão:
~$ ls *.{conf,pdf,db,txt}
lembre-se que há diferença entre maiúscula e minúscula.

se quiser encontrar um arquivo:
~$ find <dir> -name <nome_arq>
se quiser encontrar todos os arquivos que començam com determinados caracteres:
~$ find <dir> -name *<nome_arq>
se quiser aqueles que terminam:
~$ find <dir> -name <nome_arq>*
se quiser encontrar qualquer um:
~$ find <dir> -name *<nome_arq>*
para ignorar entre maiúscula e minúscula:
~$ find <dir> -type f -iname <arq>
*obs.: use . para a pesquisa ser a partir do diretório atual, e / para a pesquisa ser a partir do root.
omitindo "-type f/d", este comando é capaz de encontrar arquivos e diretórios ao mesmo tempo.
se quiser encontrar arquivos por suas permissões:
~$ find <dir> -perm <permissões_em_número>
se quiser encontrar arquivos por seu tamanho:
~$ find <dir> -size <tamanho_em_bytes>
neste caso, use + se desejar arquivos de tamanhos maiores que o passado ou - se desejar menores. pode ser passado G para gigabyte, M para megabyte, k para kilobyte. por exemplo: "find . -size +1M" ou seja, vai encontrar os arquivos maiores de 1 megabytes. 
estes comando podem, ainda, receber o argumento -not que retorna tudo aquilo que não foi pedido.
este comando é recursivo, então, pode gerar uma resposta muito grande. para evitar isto:
~$ find <dir> -maxdepth <valor> <pesquisa>
os valores podem ser a partir de 1, não havendo recursão, a 2, recursando apenas uma vez, e, assim, sucessivamente.
lembrando que várias formas de pesquisas podem ser feitas ao mesmo tempo. por exemplo: "find . -perm 744 -name *.py"


--manipulando arquivos e diretórios--
para ir de um diretório a outro:
~$ cd /home/
'.' significa o diretório atual e '..', o diretório anterior.
~$ cd ..
alias('cd ..') = ..
para voltar para o diretório home independente de onde esteja:
~$ cd ~$HOME
ou
~$ cd ~
alias('cd ~') = ~
para ir para a raiz (root):
~$ cd /

para ver o caminho do diretório atual:
~$ pwd

para ver os arquivos dentro do diretório atual:
~$ ls
para ver os arquivos e suas informações:
~$ ls -l
se quiser ver os arquivos escondidos:
~$ ls -a
ou
~$ ls --all
se quiser ver os arquivos escondidos e suas informações:
~$ ls -la
para ver de forma recursiva todo o conteúdo dos diretórios que estão dentro do diretório atual:
~$ ls -R
em qualquer um desses comandos inclua "-h" para facilitar a leitura dos dados

para ver informações da cpu:
~$ lscpu
ou, ainda, de conexões usb:
~$ lsusb

para criar um diretório no diretório atual:
~$ mkdir <novo_dir>
para criar várias pastas no diretório atual:
~$ mkdir <novo_dir1> <novo_dir2> <novo_dir3>
para criar várias pastas uma dentro da outra:
~$ mkdir -p <novo_dir>/<novo_dir_filho>/<novo_dir_neto>
alias('mkdir -p') = mkdir
para apagar um diretório no diretório atual:
~$ rmdir <nome_dir>
porém, este comando só funciona quando o diretório está fazio. se o diretório estiver sendo usado, use:
~$ rm -r <nome_dir>
ou,
~$ rm -rf <nome_dir>
*obs.: lembrando que este comando pode ser perigoso dependendo do diretório que deseja apagar. sempre dê preferência em apagar na interface gráfica.
use '' quando houver espaços no nome da pasta ou use \ antes de cada espaço.

para criar ou atualizar um arquivo já existente:
~$ touch <novoOUnome_arq>
alias('touch') = mk
para apagar um arquivo no diretório atual:
~$ rm <nome_arq>
para que o terminal confirme a deleção do arquivo:
~$ rm -i <nome_arq>
pode, incluse, ser usado junto com os outros parâmetros.

para concatenar arquivo ou ver seu conteúdo, se for pequeno:
~$ cat <nome_arq>
ou, se quiser ler o arquivo da última à primeira linha:
~$ tac <nome_arq>
se o arquivo for grande:
~$ more <nome_arq>
por "more" não ser muito eficiente, pode-se usar:
~$ less <nome_arq>
com "less", pode-se subir e descer usando as setas, pode-se ir para o topo da página com "gg" e ir para o fim com "G", pode usar "/<palavra>" para encontrar uma palavra em específico. Para sair, aperte "q".
para ler apenas o final do arquivo:
~$ tail -<número_de_linhas> <nome_arq>
ou, se quiser ir para a última linha:
~$ tail -f <nome_arq>
se o arquivo for atualizado, com este comando, a atualização aparece altomaticamente.
em qualquer um desses comando 'tail' for substituído por 'head', aparecer o início do arquivo

para escrever num arquivo ou sobrescrever:
~$ echo "<conteúdo>" > <nome_arq>
para não sobrescrever, mas sim, adicionar ao arquivo:
~$ echo "<conteúdo>" >> <nome_arq>

se quiser encontrar as linhas em que contém uma palavra em específico dentro de um arquivo:
~$ grep <palavra> <nome_arq>
ou
~$ grep -i <palavra> <nome_arq>
para não fazer distinção entre caixa alta e baixa.
para que o comando dê o número da linha:
~$ grep -n <palavra> <nome_arq>
outra forma de encontrar palavras em um arquivo é:
~$ ag <palavra> <nome_arq>
o "ag" precisa baixar se ainda não tiver:
sudo apt install silversearcher-ag

o flag '-exec' pode juntar dois comandos no terminal onde o último só será executado se o primeiro também for. por exemplo:
~$ find . -type f -iname *.py -exec grep -n def {} +
ou seja, vai procurar por arquivos que terminal em .py e, depois, procurar neste arquivos a palavra def, se encontrar, mostra o número da linha.
{} + no final indica que é o fim da flag '-exec'.

para mover um arquivo para outro diretório:
~$ mv <caminho>/<nome_arq> <caminho>/<novo_nome>
sendo que para mudar de nome é opicional, assim como <caminho>, se o arquivo estiver no diretório atual.
pode servir para mudar o nome do arquivo
~$ mv <nome_arq> <novo_nome>

para copiar um arquivo em outro diretório:
~$ cp <caminho>/<nome_arq> <caminho>
<caminho> é opcional se o arquivo estiver no diretório atual.

se quiser manipular um arquivo pelo terminal:
~$ nano <nome_arq>
ou, através do bloco de notas:
~$ gedit <nome_arq>
alias('gedit') = bn

se quiser automatizar comandos que devem ocorrer em horários e dias específicos:
~$ crontab -e
ou, se o comando precisar de permissões especiais:
~$ sudo crontab -e
a partir deste comano, um arquivo abrirá, e nele deve ser passado as informações:
~$ m(0 - 59) h(0 - 23) dia_do_mês(1 - 31) mês(1 - 12) dia_da_semana(0 - 6) comando
o comando deve ser escrito em apenas uma linha.
com exceção do comando, todas as outras informações podem ser subtituídas por * se o horário não for específicado.


--(sudo) apt---
para limpar a memória caché:
~$ sudo apt clean
alias('sudo apt clean') = cache
para ver as dependências de qualquer app:
~$ apt-cache depends <app>

para apagar diretórios e pacotes órfãos:
~$ sudo apt autoremove
alias('sudo apt autoremove') = orphan
outra forma, é:
~$ sudo apt remove --purge `deborphan`
para isso, é necessário já ter o deborphan instalado:
~$ sudo apt install deborphan
este pacote pode servir para ver os diretórios órfãos:
~$ deborphan

para atualizações:
~$ sudo apt update
para instalar essas atualizações:
~$ sudo apt upgrade
alias('sudo apt update && sudo apt list --upgradable && sudo apt upgrade') = up

para instalar pacotes e app já baixados:
~$ sudo dpkg -i <app>

se arquivos .appimage não rodarem, é necessário fazer o download:
~$ sudo apt install libfuse2
depois, no arquivo .appimage, vá na opção propriedades e permita a execução do arquivo como um programa.


--root--
para ficar em modo root no terminal:
~$ sudo su
para sair
# exit

para mudar a propriedade de um arquivo/diretório:
~$ sudo chown <entidade1>:<entidade2> <arq_ou_dir>
<entidade1> reference a quem a aplicação pertence, geralmente é o dono da máquina (user). já <entidade2>, a quem a aplicação é compartilhada, geralmente o dono (user) ou o grupo (root).
se desejar mudar a propriedade de todas as aplicações dentro de um diretório, de forma recursiva:
~$ sudo chown -R <entidade1>:<entidade2> <dir>

para mudar as permissões de uso:
~$ chmod <entidade><+_ou_-><permissão> <arq_ou_dir>
onde:
<entidade>: u (dono), g (grupo), o (outros);
<+_ou_->: dá ou tira;
<premissão>: r (ler), w (escrever/modificar), x (executar)
as permissões podem ser representadas por números:
per|bin|n
---|000|0
--x|001|1
-w-|010|2
-wx|011|3
r--|100|4
r-x|101|5
rw-|110|6
rwx|111|7
se desejar mudar a permissões de todas as aplicações dentro de um diretório, de forma recursiva:
~$ sudo chmod -R <entidade><+_ou_-><permissão> <dir>

para criar um novo usuário, uma nova conta no computador:
~$ sudo adduser <nickname_usuário>
ou, se quiser que este novo usuário possa usar 'sudo':
~$ sudo adduser <nickname_usuário> sudo
neste caso, se quiser ir de uma conta a outra:
~$ su <nickname_usuário>
é necessário saber a senha da conta que está indo.
para apagar um usuário, uma conta:
~$ sudo deluser <nickname_usuário>

para criar um grupo:
~$ sudo groupadd <grupo>
para adicionar um usuário a este grupo:
~$ sudo adduser <nickname_usuário> <grupo>

para trocar a senha de usuário:
~$ sudo passwd <nickname_usuário>


--networking--
uma forma de ver o endereço IP de qualquer site é:
~$ nslookup <site>

para saber o IP da máquina:
~$ hostname -I
ou, se quier informações mais completas:
~$ ip a

para checar se um site está respondendo:
~$ ping <site>

para ver informações sobre as conexões existentes com a internet, baixe:
~$ sudo apt install net-tools
se ainda, não tiver.
então, escreva:
~$ ifconfig

para ver os pacotes que são recebido e enviados, baixe, se ainda não tiver:
~$ sudo apt install tcpdump
então,
~$ sudo tcpdump
será mostrado um infinito número de pacotes sendo trocados com a internet. Por isso, se quiser limitar o número de pacotes que deseja ver:
~$ sudo tcpdump -c <quantidade>
para mostrar as conexões que são feitas apenas com uma determinada interface:
~$ sudo tcpdump -i <interface>
para mostrar as conexões que são feitas apenas com uma determinada porta:
~$ sudo tcpdump port <número>

para ver o status das conexões que o computador está fazendo:
~$ netstat -r
ou, se quiser ver o IP dessas conexões:
~$ netstat -nr
para ver o uso de cada device do kernel:
~$ netstat -i
para ver as conexões ativas com a internet:
~$ netstat -ta

para mapear todas as portas e conexões que um device usa, baixe, se ainda não tiver:
~$ sudo apt intstall nmap
em seguida:
~$ nmap <ip_device>
para informações mais completas:
~$ nmap -v <ip_device>
use, ainda, -6 se o ip for hexadecimal.
pode ver de sites, também:
~$ nmap <site>
criando um arquivo com todos os IP que se deseja mapear, use o comando:
~$ nmap -iL <arq>
se, no momento do mapeamento, desejar ver, também, a versão do OS:
~$ nmap -A <ip_device>


--SSH--
para configurar SSH na máquina local, é antes necessário baixar o seguinte pacote, se já não tiver:
~$ sudo apt install openssh-server
em seguida, é necessário configurar indo em:
~$ sudo nano /etc/ssh/sshd_config
neste arquivo, as seguintes configurações têm de ser mudadas:
~$ port 22 -> port <outra_port>
~$ PermitRootLogin without-password -> PermitRootLogin no
e, por último, abaixo de UsePAM yes
~$ AllowUsers <lista_de_user_permitidos>
por fim, de volta no terminal, põe:
~$ sudo systemctl restart ssh

para poder usar o terminal de outra máquina, se esta tiver um SSH host:
~$ ssh <endereço>
<endereço> pode ser <user_name@IP_da_máquina> ou <user_name@remote_host>
por exemplo, '~$ ssh lucas-mt@pointybracket.net'
para sair, basta:
~$ exit

para transferir arquivos entre máquina:
~$ sftp <endereço>
com <endereço> sendo o mesmo da conexão SSH.
o prompt que abre recebe os mesmos comandos que o terminal do linux. Acrescenta-se:
sftp> lls
serve para ver os arquivos da pasta local em que se abriu a conexão sftp, em contrate a:
sftp> ls
que ver os arquivos da máquina remota
para passar um arquivo da máquina local para a remota:
sftp> put <arq>
para pegar um arquivo da máquina remota para a local:
sftp> get <arq>
para sair:
~$ exit


--firewall--
para ativar o firewall, se ainda não estiver ativado:
~$ sudo ufw enable
para desativar:
~$ sudo ufw disable
para verificar o status do firewall:
~$ sudo ufw status
para ter informações mais completas:
~$ sudo afw status verbose
se desejar a interface gráfica e ainda não tiver:
~$ sudo apt install gufw
